---
title: "Trabalho Prático 1"
subtitle: "Séries Temporais - 1/2023" 
author:
  - Carolina Musso 18/0047850
  - Gabriela Carneiro de Almeida 18/0120816
  - Renan Menezes de Araujo
format: 
  pdf:
    keep-tex: true
    include-in-header:
      text: |
        \usepackage[auth-lg]{authblk}
execute:
  echo: false
  message: false
  warning: false
---

# Introdução

```{r}
pacman::p_load(Mcomp, tidyverse, forecast, flextable)
```

O pacote Mcomp disponibiliza milhares de séries de competições de previsão de séries temporais. A série apresentada nesse trabalho é a de id 2342, que se refe a uma pesquisa sobre "Manufacturers' shipments, paper and allied products", da comepetição M3. Ela fornece dados estatísticos mensais sobre as condições econômicas no setor de manufatura doméstica (empresas pequenas). A pesquisa mensura a atividade industrial atual e fornece uma indicação das tendências futuras desses tipos de negócios. Essa série mensal apresenta dados observados de Janeiro de 1983 a Agosto de 1992, e um horizonte de previsão de 18, projetando os resultados até Fevereiro de 1994. 

Abaixo podemos observar os dados fornecidos nessa série, bem como seu gráfico, onde o horizonte de previsão aparece em vermelho. 
```{r}
data(M3)
id1 <- 2342 
#id2 <- 1965

serie <- M3[[id1]] # serie
serie
```
```{r figura}
#| fig-cap: "Série 2342"
plot(serie)
```


## a. Decomposição da série temporal via STL (ou MSTL).

```{r}
# obtendo os dados observados

dados <- serie$x

dados %>% stl(s.window = 7) %>%
  plot()


```

Primeiramente, a função stl() - "Seasonal an trending using Loess"- foi utilizada para decompor a série analisada com o parâmetro s.window (janela sazonal) configurado para 7, como é recomendado por Cleveland et al. (1990). 


No caso específico dessa série, ela já não aparentava ter comportamentos sazonais dinâmicos muito expressivos, assim, usar a função stl() com o parâmetro de janela "periodic" (para utilizar a média) ou simplesmente utilizando uma decomposição aditiva clássica da função `decompose()`, a tendência e parâmetro sazonais já são capturados de forma clara e semelhante ao stl(), como observado abaixo:

```{r}
plot(decompose(dados))
```

Entretanto, apesar de tersido observado que a partir dessa janela sazonal o comportamento dos resíduos já melhorava (em contraste com rjanelas de 3, ou 5), aainda consideramos que havia um pouco de comportamento sazonal restante nos erros. Por esse motivo foi experimentado um outro tamanho de janela de tendência (t.window=7).

```{r}
dados %>% stl(s.window = 7, t.window =7) %>%
  plot()

```

Agora, consederamos que os resíduos estão mais bem comportados em relação à decompsição anterior. Nesse caso, notamos uma pequena parece haver sim, afinal, uma pequena dinamicidade nos termos sazonais, sendo que os termos mais recentes tem uma aplitude levemente maior. 

Como pode ser observado no gráfico, há uma tendencia crescente clara na série, seguido de um platô a partir de 1990, já observando a série como um todo. Uma vez que vamos considerar esses resíduos como suficientemente aleatórios, vemos  que o componente de tendência foi bem capturado pela decomposição.

Há também um padrão sazonal anual na série, aque apresenta três picos a cada ano, e como dito anteriormente, parece apresentar um leve aumento na amplitude quando ajustamos o cálculo para janela de tendência. 

Uma alternativa à função stl() é a função mstl(), que aplica o mesmo método de forma automatizada, ou seja, sem a necessidade de setar previamente o tamanho da janela sazonal. Apesar de ele também automaticamente sugerir um tamanho para t.window(), consideramos que o melhor resultado surgiu quando ele foi configurado para 7, como discutimos anteriormente.   Outra vantagem da função mstl() será que ela função é capaz de identificar multiplas sazonalidades, caso ocorram.

```{r}
dados %>% mstl(lambda = "auto", t.window=7 ) %>% plot

```
O grafico da decomposição MSTL é bem parecido com o gráfico obtido na decomposição STL, e na decompsição aditiva clássica,  indicando que não há multiplas sazonalidades. 


## b. Escolha um modelo ARIMA adequado de forma manual.

- Série "Manufacturers' shipments, paper and allied products"
```{r}
dados %>% plot()
```
```{r}
tabela <- tibble(
  var1 = dados %>% ndiffs(),
  var2 = dados %>% diff() %>% nsdiffs()

)

tabela %>%
  knitr::kable(
    format = "latex",
    align = "c",
    booktabs = TRUE,
    longtable = TRUE,
    linesep = "",
    col.names = c("Número de diferenciações simples (d)", "Número de diferenciações sazonais (D)"),
    ) %>%
  kableExtra::kable_styling(
      position = "center",
      latex_options = c("striped", "repeat_header"),
      stripe_color = "gray!15")
```

Conforme observado na tabela acima, a série se torna estacionária com um diferenciação simples e necessita, também, de uma diferenciação sazonal, seguindo um modelo  

\begin{align*}
  SARIMA (p, 1, q) X (P, 1, Q)
\end{align*}

```{r}
m <- dados %>% diff() %>% diff(lag = 12)
par(mfrow=c(1,3))
plot(m)
acf(m, lag.max = 12*4)
pacf(m, lag.max = 12*4)
```
```{r}
melhor_AICc = Inf
for(p in 0:3){
  for(q in 0:3){
    fit = Arima(m,order=c(p,1,q),seasonal=c(1,1,1))
    if(fit$aicc < melhor_AICc){
      melhor_AICc = fit$aicc
      cat("p =",p,", q =",q,", AICc =", fit$aicc, "\n")
    }
  }
}

```
Melhor configuração do modelo seria:

\begin{align*}
  SARIMA (2, 1, 1) X (1, 1, 1)
\end{align*}

```{r}
fit = Arima(dados, order = c(2,1,1), seasonal = c(1,1,1))
fit
```



## c. Análise de resíduos do modelo selecionado. 

```{r}

par(mfrow=c(1,2))
E1 <- fit$residuals
plot(E1);# resíduos com zeros na inicialização
E <- fit$residuals %>% window(start=c(1985,2))
plot(E);# resíduos sem a inicializaçã
```

```{r}
par(mfrow=c(1,3))
plot(E)
qqnorm(E); qqline(E)
acf(E, lag.max=12*5)
```

```{r}
tabela2 <- tibble(
  estac = tseries::kpss.test(E)$p.value,
  indep = Box.test(E, lag=15, type = "Ljung-Bo")$p.value,
  normlt = shapiro.test(E)$p.value

)
tabela2 %>%
  knitr::kable(
    format = "latex",
    align = "c",
    booktabs = TRUE,
    longtable = TRUE,
    linesep = "",
    col.names = c("Teste KPSS - estacionariedade", "Teste Box-Ljung - independência", "Teste Shapiro-Wilk - normalidade"),
    ) %>%
  kableExtra::kable_styling(
      position = "center",
      latex_options = c("striped", "repeat_header"),
      stripe_color = "gray!15")
```
O modelo ajustado cumpre os pré-requisitos de estacionariedade, independencia e normalidade, indicando que é um moledo que pode explicar a série.

## d. Comparando o modelo obtido com a função auto.arima

```{r}
fit2 = auto.arima(dados)
fit2
```

- comentar que os dois modelos ajustam bem, mas que pelo princípio da parcimônia, dese-se escolher o que tem menos parametrôs. 

## d. Apresente a equação do modelo selecionado.

-  Utilize a estimava dos parâmetros. Exemplo: o modelo selecionado é um AR(1) definido como
xt = 0.5xt−1 + εt, t = 1, 2, 3, . . ., em que {εt} é um processo i.i.d. Normal(0, 3);

## e. No final do relatório, inclua como um apêndice o código do R que foi utilizado.

- copia r os chucks com echo=T no fim